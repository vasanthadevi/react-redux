{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport TutorialDataService from \"../services/TutorialService\";\nconst initialState = [];\nexport const createTutorial = createAsyncThunk(\"tutorials/create\", async _ref => {\n  let {\n    title,\n    description\n  } = _ref;\n  const res = await TutorialDataService.create({\n    title,\n    description\n  });\n  return res.data;\n});\nexport const retrieveTutorials = createAsyncThunk(\"tutrorials/retrieve\", async () => {\n  const res = await TutorialDataService.getAll();\n  return res.data;\n});\nexport const updateTutorial = createAsyncThunk(\"tutorials/update\", async _ref2 => {\n  let {\n    id,\n    data\n  } = _ref2;\n  const res = await TutorialDataService.update(id, data);\n  return res.data;\n});\nexport const deleteTutorial = createAsyncThunk(\"tutorials/delete\", async _ref3 => {\n  let {\n    id\n  } = _ref3;\n  await TutorialDataService.remove(id);\n  return {\n    id\n  };\n});\nexport const deleteAllTutorials = createAsyncThunk(\"tutorials/deleteAll\", async () => {\n  const res = await TutorialDataService.removeAll();\n  return res.data;\n});\nexport const findTutorialsByTitle = createAsyncThunk(\"tutorials/findByTitle\", async _ref4 => {\n  let {\n    title\n  } = _ref4;\n  const res = await TutorialDataService.findByTitle(title);\n  return res.data;\n});\nconst tutorialSlice = createSlice({\n  name: \"tutorial\",\n  initialState,\n  extraReducers: {\n    [createTutorial.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [retrieveTutorials.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n    [updateTutorial.fulfilled]: (state, action) => {\n      const index = state.findIndex(_ref5 => {\n        let {\n          id\n        } = _ref5;\n        return id === action.parload.id;\n      });\n      state[index] = {\n        ...state[index],\n        ...action.payload\n      };\n    },\n    [deleteTutorial.fulfilled]: (state, action) => {\n      let index = state.findIndex(_ref6 => {\n        let {\n          id\n        } = _ref6;\n        return id === action.payload.id;\n      });\n      state.splice(index, 1);\n    },\n    [deleteAllTutorials.fulfilled]: (state, action) => {\n      return [];\n    },\n    [findTutorialsByTitle.fulfilled]: (state, action) => {\n      return [...action.payload];\n    }\n  }\n});\nconst {\n  reducer\n} = tutorialSlice;\nexport default reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","TutorialDataService","initialState","createTutorial","_ref","title","description","res","create","data","retrieveTutorials","getAll","updateTutorial","_ref2","id","update","deleteTutorial","_ref3","remove","deleteAllTutorials","removeAll","findTutorialsByTitle","_ref4","findByTitle","tutorialSlice","name","extraReducers","fulfilled","state","action","push","payload","index","findIndex","_ref5","parload","_ref6","splice","reducer"],"sources":["/Users/vasantha/workspace/react-redux/react-redux/src/slices/tutorials.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport TutorialDataService from \"../services/TutorialService\";\n\nconst initialState = [];\n\nexport const createTutorial = createAsyncThunk(\n    \"tutorials/create\",\n    async ({ title, description }) => {\n        const res = await TutorialDataService.create({ title, description });\n        return res.data;\n    }\n);\n\nexport const retrieveTutorials = createAsyncThunk(\n    \"tutrorials/retrieve\",\n    async () => {\n        const res = await TutorialDataService.getAll();\n        return res.data;\n    }\n);\n\nexport const updateTutorial = createAsyncThunk(\n    \"tutorials/update\",\n    async ({ id, data }) => {\n      const res = await TutorialDataService.update(id, data);\n      return res.data;\n    }\n  );\n\nexport const deleteTutorial = createAsyncThunk(\n    \"tutorials/delete\",\n    async ({ id }) => {\n        await TutorialDataService.remove(id);\n        return { id };\n    }\n);\n\nexport const deleteAllTutorials = createAsyncThunk(\n    \"tutorials/deleteAll\",\n    async () => {\n        const res = await TutorialDataService.removeAll();\n        return res.data;\n    }\n);\n\nexport const findTutorialsByTitle = createAsyncThunk(\n    \"tutorials/findByTitle\",\n    async ({ title }) => {\n        const res = await TutorialDataService.findByTitle(title);\n        return res.data;\n    }\n);\n\nconst tutorialSlice = createSlice({\n    name: \"tutorial\",\n    initialState,\n    extraReducers: {\n        [createTutorial.fulfilled]: (state,action) => {\n            state.push(action.payload);\n        },\n        [retrieveTutorials.fulfilled]: (state,action) => {\n            return [...action.payload];\n        },\n        [updateTutorial.fulfilled]: (state,action) => {\n            const index = state.findIndex(({ id }) => id === action.parload.id);\n            state[index] = {\n                ...state[index],\n                ...action.payload,\n            };\n        },\n        [deleteTutorial.fulfilled]: (state,action) => {\n            let index = state.findIndex(({ id }) => id === action.payload.id);\n            state.splice(index,1);\n        },\n        [deleteAllTutorials.fulfilled]: (state, action) => {\n            return [];\n          },\n          [findTutorialsByTitle.fulfilled]: (state, action) => {\n            return [...action.payload];\n          },\n    },\n});\n\nconst { reducer } = tutorialSlice;\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}